<!DOCTYPE html>
<html>
<head>
  <title>Face Enrollment - SmartGate</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
      background-color: #f3f4f6;
      padding: 1.5rem;
      margin: 0;
    }
    .container {
      max-width: 600px;
      margin: auto;
      background-color: white;
      padding: 2rem;
      border-radius: 12px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
    }
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1.5rem;
    }
    h2 {
      margin: 0;
      color: #1f2937;
    }
    .back-link {
      color: #4b5563;
      text-decoration: none;
    }
    .back-link:hover {
      text-decoration: underline;
    }
    .user-info {
      padding: 1rem;
      background-color: #f9fafb;
      border-radius: 8px;
      margin-bottom: 1.5rem;
    }
    .user-name {
      font-weight: 600;
      color: #1f2937;
    }
    .user-id {
      color: #6b7280;
    }
    .camera-container {
      position: relative;
      width: 100%;
      height: 300px;
      background-color: #e5e7eb;
      margin-bottom: 1.5rem;
      border-radius: 8px;
      overflow: hidden;
    }
    #video {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    #canvas {
      display: none;
    }
    .camera-message {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: #4b5563;
      font-weight: 500;
      text-align: center;
    }
    .button-container {
      display: flex;
      gap: 1rem;
    }
    button {
      padding: 10px 20px;
      border: none;
      border-radius: 8px;
      font-size: 1rem;
      cursor: pointer;
    }
    .capture-button {
      background-color: #3b82f6;
      color: white;
      flex: 1;
    }
    .capture-button:hover {
      background-color: #2563eb;
    }
    .submit-button {
      background-color: #10b981;
      color: white;
      flex: 1;
    }
    .submit-button:hover {
      background-color: #059669;
    }
    .submit-button:disabled {
      background-color: #9ca3af;
      cursor: not-allowed;
    }
    .image-preview {
      width: 100%;
      height: 300px;
      background-color: #f3f4f6;
      border-radius: 8px;
      margin-bottom: 1.5rem;
      display: none;
      overflow: hidden;
    }
    .image-preview img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h2>Face Enrollment</h2>
      <a href="/admin/add" class="back-link">‚Üê Back</a>
    </div>
    
    <div class="user-info">
      <p class="user-name">{{ user.name }}</p>
      <p class="user-id">ID: {{ user.user_id }}</p>
    </div>
    
    <div class="camera-container" id="camera-container">
      <video id="video" autoplay></video>
      <div class="camera-message" id="camera-message">Initializing camera...</div>
      <canvas id="canvas" width="640" height="480"></canvas>
    </div>
    
    <div class="image-preview" id="image-preview">
      <img id="captured-image">
    </div>
    
    <form method="post" id="enrollment-form">
      <input type="hidden" name="image_data" id="image-data">
      
      <div class="button-container">
        <button type="button" id="capture-button" class="capture-button">Capture Image</button>
        <button type="submit" id="submit-button" class="submit-button" disabled>Enroll Face</button>
      </div>
    </form>
  </div>
  
  <script>
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const captureButton = document.getElementById('capture-button');
    const submitButton = document.getElementById('submit-button');
    const cameraMessage = document.getElementById('camera-message');
    const cameraContainer = document.getElementById('camera-container');
    const imagePreview = document.getElementById('image-preview');
    const capturedImage = document.getElementById('captured-image');
    const imageData = document.getElementById('image-data');
    
    let stream = null;
    
    // Initialize camera
    async function initCamera() {
      try {
        stream = await navigator.mediaDevices.getUserMedia({ 
          video: { 
            width: { ideal: 1280 },
            height: { ideal: 720 },
            facingMode: "user"
          } 
        });
        video.srcObject = stream;
        cameraMessage.style.display = 'none';
      } catch (err) {
        cameraMessage.innerText = 'Error accessing camera: ' + err.message;
        console.error('Error accessing camera:', err);
      }
    }
    
    // Capture image
    captureButton.addEventListener('click', function() {
      const context = canvas.getContext('2d');
      
      // Draw video frame to canvas
      context.drawImage(video, 0, 0, canvas.width, canvas.height);
      
      // Get image data as base64 string
      const imageDataUrl = canvas.toDataURL('image/jpeg');
      
      // Update hidden input with image data
      imageData.value = imageDataUrl;
      
      // Show preview
      capturedImage.src = imageDataUrl;
      cameraContainer.style.display = 'none';
      imagePreview.style.display = 'block';
      
      // Enable submit button
      submitButton.disabled = false;
      
      // Change capture button to "Retake"
      captureButton.innerText = 'Retake';
      captureButton.addEventListener('click', function() {
        cameraContainer.style.display = 'block';
        imagePreview.style.display = 'none';
        submitButton.disabled = true;
        captureButton.innerText = 'Capture Image';
      }, { once: true });
    });
    
    // Initialize camera when page loads
    window.addEventListener('load', initCamera);
    
    // Stop camera when leaving the page
    window.addEventListener('beforeunload', function() {
      if (stream) {
        stream.getTracks().forEach(track => track.stop());
      }
    });
  </script>
</body>
</html>